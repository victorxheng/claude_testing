{
  "pages": [
    {
      "title": "CreateProfile",
      "description": "Profile creation page to fill out name, background, LinkedIn profile, and technical cofounder status",
      "components": [
        {
          "name": "Footer",
          "description": "Footer with site links and copyright",
          "code": "import Link from 'next/link'\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-white\">\n      <div className=\"mx-auto max-w-7xl overflow-hidden py-20 px-6 sm:py-24 lg:px-8\">\n        <nav className=\"-mb-6 columns-2 sm:flex sm:justify-center sm:space-x-12\" aria-label=\"Footer\">\n          <div className=\"pb-6\">\n            <Link href=\"#\" className=\"text-sm leading-6 text-gray-600 hover:text-gray-900\">\n              About\n            </Link>\n          </div>\n          <div className=\"pb-6\">\n            <Link href=\"#\" className=\"text-sm leading-6 text-gray-600 hover:text-gray-900\">\n              Blog\n            </Link>\n          </div>\n          <div className=\"pb-6\">\n            <Link href=\"#\" className=\"text-sm leading-6 text-gray-600 hover:text-gray-900\">\n              Jobs\n            </Link>\n          </div>\n          <div className=\"pb-6\">\n            <Link href=\"#\" className=\"text-sm leading-6 text-gray-600 hover:text-gray-900\">\n              Press\n            </Link>\n          </div>\n          <div className=\"pb-6\">\n            <Link href=\"#\" className=\"text-sm leading-6 text-gray-600 hover:text-gray-900\">\n              Privacy\n            </Link>\n          </div>\n          <div className=\"pb-6\">\n            <Link href=\"#\" className=\"text-sm leading-6 text-gray-600 hover:text-gray-900\">\n              Terms\n            </Link>\n          </div>\n        </nav>\n        <div className=\"mt-10 text-center text-xs leading-5 text-gray-500\">\n          &copy; 2023 YC Co-founder Matching. All rights reserved.\n        </div>\n      </div>\n    </footer>\n  )\n}\n"
        }
      ]
    },
    {
      "title": "CreateProfile",
      "description": "Profile creation page to fill out name, background, LinkedIn profile, and technical cofounder status",
      "components": [
        {
          "name": "ProfileForm",
          "description": "Form to input profile details and submit",
          "code": "'use client'\nimport { useState } from 'react'\nimport { useMutation } from 'convex/react'\nimport { api } from '@/convex/_generated/api'\nimport useStoreUserEffect from '@/lib/useStoreUserEffect'\n\ninterface Props {\n}\n\nexport default ({ }: Props) => {\n  const userId = useStoreUserEffect()\n  const [name, setName] = useState('')\n  const [linkedin, setLinkedin] = useState('')\n  const [description, setDescription] = useState('')\n  const [isTechnical, setIsTechnical] = useState(false)\n\n  const updateProfile = useMutation(api.backend.updateUserProfile)\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    const formData = new FormData(e.currentTarget);\n    const name = formData.get('name') as string;\n    const linkedin = formData.get('linkedin') as string;\n    const description = formData.get('description') as string;\n    const isTechnical = formData.get('isTechnical') === 'on';\n\n    if (!userId) return\n    await updateProfile({ name, linkedin, description, isTechnical, isAvailable: true })\n    window.location.href = '/match'\n  }\n\n\n  return (\n    <main className=\"mx-auto max-w-2xl py-32\">\n        <div className=\"text-center\">\n          <h1 className=\"text-4xl font-bold tracking-tight text-gray-900 sm:text-6xl\">Create Your Profile</h1>\n          <p className=\"mt-6 text-lg leading-8 text-gray-600\">Fill out the details below to create your co-founder matching profile.</p>\n        </div>\n        <form onSubmit={handleSubmit} className=\"mt-16 space-y-8\">\n          <div>\n            <label htmlFor=\"name\" className=\"block text-sm font-semibold leading-6 text-gray-900\">Full name</label>\n            <div className=\"mt-2.5\">\n              <input type=\"text\" name=\"name\" id=\"name\" autoComplete=\"name\" required className=\"block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n            </div>\n          </div>\n          <div>\n            <label htmlFor=\"linkedin\" className=\"block text-sm font-semibold leading-6 text-gray-900\">LinkedIn URL</label>\n            <div className=\"mt-2.5\">\n              <input type=\"url\" name=\"linkedin\" id=\"linkedin\" required className=\"block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n            </div>\n          </div>\n          <div>\n            <label htmlFor=\"description\" className=\"block text-sm font-semibold leading-6 text-gray-900\">Description</label>\n            <div className=\"mt-2.5\">\n              <textarea name=\"description\" id=\"description\" rows={4} required className=\"block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" defaultValue={\"\"} />\n            </div>\n          </div>\n          <div className=\"flex items-center gap-x-3\">\n            <input id=\"isTechnical\" name=\"isTechnical\" type=\"checkbox\" className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600\" />\n            <label htmlFor=\"isTechnical\" className=\"block text-sm font-medium leading-6 text-gray-900\">I am a technical co-founder</label>\n          </div>\n          <div>\n            <button type=\"submit\" className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\">Create profile</button>\n          </div>\n        </form>\n      </main>\n  )\n}"
        }
      ]
    },
    {
      "title": "Match",
      "description": "Match page to view other available user profiles and send match requests with message",
      "components": [
        {
          "name": "MatchRequestForm",
          "description": "Form to input message and send match request, triggers sendMatchRequest mutation",
          "code": "'use client'\nimport { useMutation } from 'convex/react'\nimport { api } from '@/convex/_generated/api'\nimport { useState } from 'react'\nimport { Id } from '@/convex/_generated/dataModel'\nimport { redirect } from 'next/navigation'\nimport { useRouter } from 'next/navigation'\n\ninterface Props {\n  toUserId: Id<\"users\">\n}\n\nexport default ({ toUserId }: Props) => {\n  const [message, setMessage] = useState('')\n  const sendRequest = useMutation(api.backend.sendMatchRequest)\n  const router = useRouter()\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    await sendRequest({ toUserId, message })\n    setMessage('')\n    router.push('/matchRequests')\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"mt-6\">\n      <div>\n        <label htmlFor=\"message\" className=\"block text-sm font-medium text-gray-700\">\n          Message\n        </label>\n        <div className=\"mt-1\">\n          <textarea\n            id=\"message\"\n            name=\"message\"\n            rows={3}\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm p-2\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"mt-6\">\n        <button\n          type=\"submit\"\n          className=\"inline-flex items-center rounded-xl border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n        >\n          Send Match Request\n        </button>\n      </div>\n    </form>\n  )\n}\n"
        }
      ]
    },
    {
      "title": "Match",
      "description": "Match page to view other available user profiles and send match requests with message",
      "components": [
        {
          "name": "ProfileList",
          "description": "List of available user profiles fetched with getAvailableProfiles query",
          "code": "'use client'\nimport { useQuery } from 'convex/react'\nimport { api } from '@/convex/_generated/api'\nimport { Doc } from \"@/convex/_generated/dataModel\";\nimport useStoreUserEffect from '@/lib/useStoreUserEffect'\nimport ProfileCard from './ProfileCard';\n\n\nexport default () => {\n  const userId = useStoreUserEffect();\n  const profiles = useQuery(api.backend.getAvailableProfiles, userId ? { } : 'skip');\n\n  return (\n    <div className=\"py-10 grid grid-cols-1 gap-y-10 sm:grid-cols-2 gap-x-6 lg:grid-cols-3 xl:grid-cols-4 xl:gap-x-8\">\n      {profiles?.map((profile: Doc<\"users\">) => (\n        <ProfileCard key={profile._id} profile={profile} />\n      ))}\n    </div>\n  )\n}\n"
        }
      ]
    },
    {
      "title": "Match",
      "description": "Match page to view other available user profiles and send match requests with message",
      "components": [
        {
          "name": "Footer",
          "description": "Footer with site links and copyright",
          "code": "import Link from 'next/link'\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-white\">\n      <div className=\"mx-auto max-w-7xl overflow-hidden py-20 px-6 sm:py-24 lg:px-8\">\n        <nav className=\"-mb-6 columns-2 sm:flex sm:justify-center sm:space-x-12\" aria-label=\"Footer\">\n          <div className=\"pb-6\">\n            <Link href=\"#\" className=\"text-sm leading-6 text-gray-600 hover:text-gray-900\">\n              About\n            </Link>\n          </div>\n          <div className=\"pb-6\">\n            <Link href=\"#\" className=\"text-sm leading-6 text-gray-600 hover:text-gray-900\">\n              Blog\n            </Link>\n          </div>\n          <div className=\"pb-6\">\n            <Link href=\"#\" className=\"text-sm leading-6 text-gray-600 hover:text-gray-900\">\n              Jobs\n            </Link>\n          </div>\n          <div className=\"pb-6\">\n            <Link href=\"#\" className=\"text-sm leading-6 text-gray-600 hover:text-gray-900\">\n              Press\n            </Link>\n          </div>\n          <div className=\"pb-6\">\n            <Link href=\"#\" className=\"text-sm leading-6 text-gray-600 hover:text-gray-900\">\n              Privacy\n            </Link>\n          </div>\n          <div className=\"pb-6\">\n            <Link href=\"#\" className=\"text-sm leading-6 text-gray-600 hover:text-gray-900\">\n              Terms\n            </Link>\n          </div>\n        </nav>\n        <div className=\"mt-10 text-center text-xs leading-5 text-gray-500\">\n          &copy; 2023 YC Co-founder Matching. All rights reserved.\n        </div>\n      </div>\n    </footer>\n  )\n}\n"
        }
      ]
    },
    {
      "title": "Match",
      "description": "Match page to view other available user profiles and send match requests with message",
      "components": [
        {
          "name": "ProfileCard",
          "description": "Card displaying user profile info with match request button",
          "code": "'use client'\nimport { Doc } from \"@/convex/_generated/dataModel\";\nimport { useMutation } from \"convex/react\";\nimport { api } from \"@/convex/_generated/api\";\nimport MatchRequestForm from \"./MatchRequestForm\";\n\ninterface Props {\n  profile: Doc<\"users\">\n}\n\nexport default ({ profile }: Props) => {\n  return (\n    <div className=\"bg-white shadow-lg rounded-2xl p-6\">\n      <h2 className=\"text-xl font-bold mb-2\">{profile.name}</h2>\n      <p className=\"text-gray-600 mb-4\">{profile.description}</p>\n      <div className=\"mb-4\">\n        <span className=\"font-semibold\">Technical Founder:</span>{\" \"}\n        {profile.isTechnical ? \"Yes\" : \"No\"}\n      </div>\n      <MatchRequestForm toUserId={profile._id} />\n    </div>\n  );\n};\n"
        }
      ]
    },
    {
      "title": "MatchRequests",
      "description": "View and manage incoming match requests, approve to connect on LinkedIn or reject",
      "components": [
        {
          "name": "MatchRequestCard",
          "description": "Card displaying match request info with accept/reject buttons, triggers acceptMatchRequest or rejectMatchRequest mutations",
          "code": "'use client'\nimport { useMutation, useQuery } from 'convex/react'\nimport { Doc, Id } from \"@/convex/_generated/dataModel\";\nimport { api } from \"@/convex/_generated/api\";\nimport { useState } from 'react';\n\ninterface Props {\n  request: Doc<\"matches\">;\n  isIncoming: boolean;\n}\n\nexport default ({ request, isIncoming }: Props) => {\n  const [acceptMessage, setAcceptMessage] = useState(\"\");\n  \n  const acceptMatch = useMutation(api.backend.acceptMatchRequest);\n  const rejectMatch = useMutation(api.backend.rejectMatchRequest);\n  const requester = useQuery(api.backend.getUserProfile, { userId: request.from });\n  const requestee = useQuery(api.backend.getUserProfile, { userId: request.to });\n\n  const handleAccept = () => {\n    acceptMatch({ matchId: request._id, message: acceptMessage });\n  };\n\n  const handleReject = () => {\n    rejectMatch({ matchId: request._id });\n  };\n\n  if (!requester || !requestee) {\n    return <div>Loading...</div>;\n  }\n  return (<div>\n    <div className=\"bg-white shadow overflow-hidden sm:rounded-lg px-4 py-4\">\n      {isIncoming ? (<p className=\"text-lg leading-6 font-medium text-gray-900\">From: {requester.name}</p>) : (<p className=\"text-lg leading-6 font-medium text-gray-900\">To: {requestee.name}</p>)}\n\n    </div>\n    <div className=\"border-t border-gray-200 px-4 py-3\">\n      <dl className=\"grid grid-cols-1 gap-y-4\">\n        <div>\n          <dt className=\"text-sm font-medium text-gray-500\">Status</dt>\n          <dd className=\"mt-1 text-sm text-gray-900\">{request.status}</dd>\n        </div>\n        <div>\n          <dt className=\"text-sm font-medium text-gray-500\">Message</dt>\n          <dd className=\"mt-1 text-sm text-gray-900\">{request.requestMessage}</dd>\n        </div>\n        <div>\n          {request.status == \"accepted\" ?\n            (\n              <>\n                <dt className=\"text-sm font-medium text-gray-500\">LinkedIn</dt>\n                <dd className=\"mt-1 text-sm text-gray-900\">\n                  <a href={isIncoming ? requester.linkedin : requestee.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">{isIncoming ? requester.linkedin : requestee.linkedin}</a>\n                </dd>\n              </>\n            ) : null\n          }\n        </div>\n      </dl>\n{isIncoming && request.status == \"pending\" ? (\n  <div className=\"bg-gray-50 px-4 py-3 sm:flex sm:flex-col\">\n    <div>\n      <label htmlFor=\"acceptMessage\" className=\"block text-sm font-medium text-gray-700\">\n        Message (optional)\n      </label>\n      <div className=\"mt-1\">\n        <textarea\n          rows={4}\n          name=\"acceptMessage\"\n          id=\"acceptMessage\"\n          className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n          value={acceptMessage}\n          onChange={(e) => setAcceptMessage(e.target.value)}\n        />\n      </div>\n    </div>\n    <div className=\"mt-3 sm:mt-4 sm:flex sm:flex-row-reverse\">\n      <button\n        type=\"button\"\n        className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:ml-3 sm:w-auto sm:text-sm\"\n        onClick={handleAccept}\n      >\n        Accept\n      </button>\n      <button\n        type=\"button\"\n        className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n        onClick={handleReject}\n      >\n        Reject\n      </button>\n    </div>\n  </div>\n) : null}\n    </div>\n  </div>\n  )\n};"
        }
      ]
    }
  ]
}